{"meta":{"title":"小耳朵","subtitle":null,"description":null,"author":"Duer","url":"http://xerduo.com"},"pages":[{"title":"","date":"2021-03-05T13:58:59.927Z","updated":"2021-03-05T13:58:59.927Z","comments":true,"path":"google184e1e684149229c.html","permalink":"http://xerduo.com/google184e1e684149229c.html","excerpt":"","text":"google-site-verification: google184e1e684149229c.html"},{"title":"","date":"2018-01-19T06:58:08.000Z","updated":"2021-03-05T13:58:59.924Z","comments":true,"path":"about/index.html","permalink":"http://xerduo.com/about/index.html","excerpt":"","text":"关于我123456789&#123; \"name\": \"Duer\", \"address\": \"广东省深圳市\", \"education\": \"本科/贵州大学\", \"Github\": \"https://github.com/adoer\", \"blog\": \"www.xerduo.com\", \"email\": \"duqingbetter@qq.com\", \"company\": \"格创东智\",&#125;"},{"title":"Categories","date":"2016-08-16T07:00:44.000Z","updated":"2021-03-05T13:58:59.925Z","comments":false,"path":"categories/index.html","permalink":"http://xerduo.com/categories/index.html","excerpt":"","text":""},{"title":"Tags","date":"2016-08-11T04:12:45.000Z","updated":"2021-03-05T13:58:59.928Z","comments":true,"path":"tags/index.html","permalink":"http://xerduo.com/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"🎮基于canvas的俄罗斯方块游戏","slug":"基于canvas的俄罗斯方块游戏","date":"2021-01-03T07:00:53.000Z","updated":"2021-03-05T13:58:59.924Z","comments":true,"path":"2021/01/03/基于canvas的俄罗斯方块游戏/","link":"","permalink":"http://xerduo.com/2021/01/03/基于canvas的俄罗斯方块游戏/","excerpt":"演示地址 点击这里 使用方法 12// html部分&lt;div id=\"tetris\"&gt;&lt;/div&gt; 1234// Js部分 var tetris = new Tetris(&#123; id:\"tetris\"&#125;);","text":"演示地址 点击这里 使用方法 12// html部分&lt;div id=\"tetris\"&gt;&lt;/div&gt; 1234// Js部分 var tetris = new Tetris(&#123; id:\"tetris\"&#125;); 界面预览游戏开始 游戏进行中 游戏结束","categories":[{"name":"前端","slug":"前端","permalink":"http://xerduo.com/categories/前端/"}],"tags":[{"name":"游戏","slug":"游戏","permalink":"http://xerduo.com/tags/游戏/"}]},{"title":"两数相加","slug":"两数相加","date":"2021-01-01T03:41:50.000Z","updated":"2021-03-05T13:58:59.922Z","comments":true,"path":"2021/01/01/两数相加/","link":"","permalink":"http://xerduo.com/2021/01/01/两数相加/","excerpt":"题意You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.You may assume the two numbers do not contain any leading zero, except the number 0 itself.给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。你可以假设除了数字 0 之外，这两个数字都不会以零开头。","text":"题意You are given two non-empty linked lists representing two non-negative integers. The digits are stored in reverse order and each of their nodes contain a single digit. Add the two numbers and return it as a linked list.You may assume the two numbers do not contain any leading zero, except the number 0 itself.给定两个非空链表来表示两个非负整数。位数按照逆序方式存储，它们的每个节点只存储单个数字。将两数相加返回一个新的链表。你可以假设除了数字 0 之外，这两个数字都不会以零开头。 例如：123Input: (2 -&gt; 4 -&gt; 3) + (5 -&gt; 6 -&gt; 4)Output: 7 -&gt; 0 -&gt; 8Explanation: 342 + 465 = 807. 代码12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455/** * Definition for singly-linked list. * function ListNode(val) &#123; * this.val = val; * this.next = null; * &#125; *//** * @param &#123;ListNode&#125; l1 * @param &#123;ListNode&#125; l2 * @return &#123;ListNode&#125; */var addTwoNumbers = function(l1, l2) &#123; // 假设l1,l2是数组(其实是链表) 需要理解链表概念 因为 l1 l1 是非空链表 // 将链表转化为数组 let arrL1,arrL2; let dealListNode=function(arg)&#123; // 递归 let arr=[]; let curItemConst=arg; function fun(curItem)&#123; if(curItem)&#123; arr.push(curItem['val']); curItemConst=curItem['next']; fun(curItemConst); &#125; &#125; fun(curItemConst); return arr; &#125; arrL1=dealListNode(l1); arrL2=dealListNode(l2); //判断哪个长 var arr=arrL1.length&gt;arrL2.length?arrL1:arrL2; // 结果数组,// 进位数组 let result=[],cache=[]; for(let i=0, l=arr.length; i&lt;l; i++)&#123; let curL1=arrL1[i]||0; let curL2=arrL2[i]||0; cache[i]=cache[i]||0; let res=curL1+curL2+cache[i]; if(res&lt;10)&#123; result[i]=res; &#125;else&#123; result[i]=res%10; cache[i+1]=1; &#125; &#125; if(cache.length&gt;arr.length)&#123; result=[...result,1] &#125; return result;&#125;;","categories":[{"name":"前端","slug":"前端","permalink":"http://xerduo.com/categories/前端/"}],"tags":[{"name":"刷题","slug":"刷题","permalink":"http://xerduo.com/tags/刷题/"}]},{"title":"两数之和","slug":"TwoSum","date":"2018-01-18T05:06:00.000Z","updated":"2021-03-05T13:58:59.921Z","comments":true,"path":"2018/01/18/TwoSum/","link":"","permalink":"http://xerduo.com/2018/01/18/TwoSum/","excerpt":"题意Given an array of integers, return indices of the two numbers such that they add up to a specific target，You may assume that each input would have exactly one solution, and you may not use the same element twice.给定一个整数数组，返回其中两个数的索引，并使索引对应元素之和与给定的数相等，假定每次输入都只有一个解决方案，并且不会使用相同的元素两次。","text":"题意Given an array of integers, return indices of the two numbers such that they add up to a specific target，You may assume that each input would have exactly one solution, and you may not use the same element twice.给定一个整数数组，返回其中两个数的索引，并使索引对应元素之和与给定的数相等，假定每次输入都只有一个解决方案，并且不会使用相同的元素两次。 例如：123Given nums = [2, 7, 11, 15], target = 9,Because nums[0] + nums[1] = 2 + 7 = 9,return [0, 1]. 代码123456789101112131415/** * @param &#123;number[]&#125; nums * @param &#123;number&#125; target * @return &#123;number[]&#125; */var twoSum = function(nums, target) &#123; var map = &#123;&#125;; for (var i = 0, l = nums.length; i &lt; l; i++) &#123; if (map[target - nums[i]] !== undefined) &#123; return [map[target - nums[i]], i]; &#125; else &#123; map[nums[i]] = i; &#125; &#125;&#125;;","categories":[{"name":"前端","slug":"前端","permalink":"http://xerduo.com/categories/前端/"}],"tags":[{"name":"刷题","slug":"刷题","permalink":"http://xerduo.com/tags/刷题/"}]}]}